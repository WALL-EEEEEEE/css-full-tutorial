* {
    margin: 0px;
    padding: 0px;
}

html body {
   overflow: hidden;
}
h1.title {
  width: 100vw;
  font-size: 2.5rem;
  display: flex;
  justify-content: center;
  align-items: center;

}
h1.title span {
  font-size: medium;
}

#container {
  width: 95vw;
  height: 60vh;
  margin: 0 auto;
  background-color: whitesmoke;
  outline: 8px solid #4834D4;
  /* 
  display: grid 采用grid布局
  */
  display: grid; 
  /*
  grid-template-columns: 指定列的宽度和列个数
  */
  /*
  指定4列，第一列为200px, 第二列为200px, 第三列为200px, 第四列自动
  */
  grid-template-columns: 200px 200px 200px auto;
  /*
  指定3列，第一列为50%宽度, 第二列为20%宽度, 第三列为25%宽度
  */
  grid-template-columns: 50% 20% 25%;
  /*
  指定3列，每列都为1/3大小, fr为flex布局中的动态大小单位。
  */
  grid-template-columns: 1fr 1fr 1fr;
  /*
  同上 
  */
  grid-template-columns: repeat(3, 1fr);
  /*
  指定两列，第一列为1/2大小，第二列为最小300px大小，最大为1/2大小
  */
  grid-template-columns: 1fr minmax(300px, 1fr);
  /*
  指定列大小为300px，不指定列数，由grid布局根据当前的可用空间生成对应的列数量填充
  如果可用空间多余300px，那么会自动生成一个空白的列
  */
  grid-template-columns: repeat(auto-fill, 300px);
  /*
  指定列大小为300px，不指定列数，grid布局不会根据当前的可用空间生成对应的列数量
  */
  grid-template-columns: repeat(auto-fit, 300px);
  /*
  指定4列
  第1列  [col-start](名字) 1fr (大小)
  第2列  [col-2](名字) 1fr (大小)
  第3列  [col-3](名字) 1fr (大小)
  第4列  [col-end](名字) 1fr (大小)
  指定列名，方便处理列移动
  */
  grid-template-columns: [col-start] 1fr [col-2] 1fr [col-3] 1fr [col-end];

  /*
  指定两行，第一行为100px高，第二行为50px高
  */
  grid-template-rows: 100px 50px;
  /*
  指定默认生成的列的宽度为50px (即没有被grid-template-columns明显指定的)
  */
  grid-auto-columns: 50px;
  /*
  指定默认生成的列的宽度为50px (即没有被grid-template-rows明显指定的)
  */
  grid-auto-rows: 50px;
  /*
  grid-auto-flow: 指定生成的元素的排列方式
  */
  /* 按照行排列 */
  grid-auto-flow: row;
  /* 按照列排列 */
  grid-auto-flow: column;
  grid-auto-flow: row;
  /* 按照紧凑排列 */
  /* grid-auto-flow: dense; */

  /* 设置列之间的间隔 */
  grid-column-gap: 10px;
  /* 设置行之间的间隔 */
  grid-row-gap: 10px;
  /* grid-gap 是grid-column-gap和grid-row-gap两个的简写 
  grid-gap [grid-row-gap] [grid-column-gap]
  */
  grid-gap: 5px;
  align-items: start;
  align-items: end;
  align-items: stretch;
  justify-items: start;
  justify-items: end;
  justify-items: stretch;

  /* 
  place-items 是align-items和justify-items的简写
  place-items: [align-items] [justify-items]
  */
  place-items: center stretch;

  align-content: center;
  justify-content: space-evenly;
  /*
  place-content 是align-conent和justify-content的简写
  place-content: [align-content] [justify-content]
  */
  place-content: center space-evenly;


}
#container>.item {
  background-color: goldenrod;
  border: 1px solid white;
  display: flex;
  justify-content: center;
  align-items: center;
}

/*
.thirteen {
  grid-column: 10/11; 
}
*/